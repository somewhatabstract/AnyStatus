<UserControl x:Class="AnyStatus.ToolWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AnyStatus"
             xmlns:vsp="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.14.0"
             xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:theming="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
             xmlns:utilities="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Utilities"
             mc:Ignorable="d" 
             d:DesignHeight="300"
             d:DesignWidth="300"
             d:DataContext="{d:DesignInstance Type=local:ToolWindowViewModel}"
             x:Name="ToolWindow">

    <UserControl.Resources>
        <ResourceDictionary>

            <local:IconConverter x:Key="IconConverter"/>
            <local:TooltipConverter x:Key="TooltipConverter" />
            <local:HexToBrushConverter x:Key="HexToBrushConverter"/>
            <utilities:BrushToColorConverter x:Key="BrushToColorConverter"/>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/AnyStatus;component/Resources/Styles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/AnyStatus;component/Resources/Icons.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/AnyStatus;component/Features/ToolWindow/ContextMenus/TreeViewContextMenu.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/AnyStatus;component/Features/ToolWindow/ContextMenus/FolderContextMenu.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/AnyStatus;component/Features/ToolWindow/ContextMenus/ItemContextMenu.xaml"/>
            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <TreeView Name="TreeView"
                  ItemsSource="{Binding Settings.RootItem.Items}"
                  ContextMenu="{StaticResource TreeViewContextMenu}"
                  Background="Transparent" 
                  BorderThickness="0" 
                  FocusVisualStyle="{x:Null}"
                  MouseDown="TreeView_MouseDown"
                  Drop="TreeViewItem_Drop"
                  DragOver="TreeViewItem_DragOver"
                  PreviewMouseRightButtonDown="OnPreviewMouseRightButtonDown"
                  Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"
                  theming:ImageThemingUtilities.ImageBackgroundColor="{Binding Background, RelativeSource={RelativeSource Self}, Converter={StaticResource BrushToColorConverter}}">

            <TreeView.Resources>

                <!-- Style the inactive selection the same as active -->
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                     Color="{DynamicResource {x:Static SystemColors.HighlightColorKey}}" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                     Color="{DynamicResource {x:Static SystemColors.HighlightTextColorKey}}"/>

                <!-- Color Status Indicator-->
                <Rectangle x:Key="ColoredStatusIndicator" x:Shared="False" Width="3" Fill="{Binding State.Metadata.Color, Converter={StaticResource HexToBrushConverter}}">
                    <Rectangle.Style>
                        <Style TargetType="{x:Type Rectangle}">
                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DataContext.Settings.ShowStatusColors, ElementName=ToolWindow}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Rectangle.Style>
                </Rectangle>

                <!-- Icon Status Indicator-->
                <Grid x:Key="IconStatusIndicator" x:Shared="False">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DataContext.Settings.ShowStatusIcons, ElementName=ToolWindow}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Rectangle Width="30" Height="30" Opacity="0.05" Fill="{DynamicResource {x:Static vsp:EnvironmentColors.ToolWindowTextBrushKey}}" />
                    <Rectangle Width="18" Height="18" Opacity="0.8" Fill="{DynamicResource {x:Static vsp:EnvironmentColors.ToolWindowTextBrushKey}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{Binding State.Metadata.Icon, Converter={StaticResource IconConverter}}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Grid>

                <!--Folder-->
                <HierarchicalDataTemplate DataType="{x:Type local:Folder}" ItemsSource="{Binding Items}">
                    <StackPanel Style="{StaticResource StatusPanelStyle}"
                                ContextMenu="{StaticResource FolderContextMenu}"
                                Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">

                        <StackPanel.ToolTip>
                            <TextBlock Text="{Binding Converter={StaticResource TooltipConverter}}" />
                        </StackPanel.ToolTip>
                        
                        <ContentControl Content="{StaticResource ColoredStatusIndicator}"/>

                        <ContentControl Content="{StaticResource IconStatusIndicator}"/>

                        <local:EditableTextBlock Text="{Binding Name}" 
                                                 Margin="5,0,5,0"
                                                 FontWeight="Bold"
                                                 VerticalAlignment="Center"
                                                 HorizontalAlignment="Stretch"
                                                 IsEditing="{Binding IsEditing}" 
                                                 SaveCommand="{Binding DataContext.SaveCommand, ElementName=ToolWindow}" />
                    </StackPanel>
                </HierarchicalDataTemplate>

                <!--Item-->
                <DataTemplate DataType="{x:Type local:Item}">

                    <StackPanel Style="{StaticResource StatusPanelStyle}"
                                ContextMenu="{StaticResource ItemContextMenu}"
                                Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">

                        <StackPanel.ToolTip>
                            <TextBlock Text="{Binding Converter={StaticResource TooltipConverter}}" />
                        </StackPanel.ToolTip>

                        <ContentControl Content="{StaticResource ColoredStatusIndicator}"/>

                        <ContentControl Content="{StaticResource IconStatusIndicator}"/>

                        <local:EditableTextBlock Text="{Binding Name}"
                                                 Margin="5,0,5,0"
                                                 VerticalAlignment="Center"
                                                 HorizontalAlignment="Stretch"
                                                 IsEditing="{Binding IsEditing}" 
                                                 SaveCommand="{Binding DataContext.SaveCommand, ElementName=ToolWindow}" />
                    </StackPanel>
                </DataTemplate>

            </TreeView.Resources>

            <TreeView.InputBindings>
                <KeyBinding Key="F2" Command="{Binding RenameCommand}" CommandParameter="{Binding ElementName=TreeView, Path=SelectedItem}"/>
                <KeyBinding Key="Delete" Command="{Binding DeleteCommand}" CommandParameter="{Binding ElementName=TreeView, Path=SelectedItem}"/>
            </TreeView.InputBindings>

            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource TreeViewItemContainerStyle}">
                    <EventSetter Event="TreeViewItem.MouseMove" Handler="TreeViewItem_MouseMove" />
                    <EventSetter Event="TreeViewItem.DragOver" Handler="TreeViewItem_DragOver" />
                    <EventSetter Event="TreeViewItem.Drop" Handler="TreeViewItem_Drop" />
                </Style>
            </TreeView.ItemContainerStyle>

        </TreeView>
    </Grid>

</UserControl>
